---
import type { GetStaticPaths } from "astro";
import Form from "../../components/Form.astro";
import TextInput from "../../components/TextInput.astro";
import Layout from "../../layouts/Layout.astro";
import SelectCountryInput from "../../components/SelectCountryInput.astro";
import { guestSchema } from "../../schemas/schemas";

export const getStaticPaths = (async () => {
  const response = await fetch("http://127.0.0.1:8000/hospedes");
  const data: any = await response.json();
  const paths = data["guests"].map((element: any) => {
    return { params: { document: element["document"] } };
  });

  return paths;
}) satisfies GetStaticPaths;

const { document } = Astro.params;

const guestResponse = await fetch(`http://127.0.0.1:8000/hospedes/${document}`);
const data = await guestResponse.json();
const guest = await guestSchema.parseAsync(data);
---

<Layout>
  <Form id="update-guest-form">
    <div slot="inputs" class="flex flex-col w-full max-w-lg mx-auto">
      <TextInput
        disabled
        id="created_at"
        label="Criado em"
        value={guest.created_at}
      />
      <TextInput id="document" label="Documento" value={guest.document} />
      <TextInput id="name" label="Nome" value={guest.name} />
      <TextInput id="surname" label="Sobrenome" value={guest.surname} />
      <SelectCountryInput />
      <TextInput id="phone" label="Telefone" value={guest.phone} />
    </div>
    <div
      slot="buttons"
      class="flex w-full items-center p-16 align-middle justify-center gap-6">
      <button
        id="update_button"
        class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-56"
        type="submit">Atualizar</button
      >
      <button
        id="delete_button"
        class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-56"
        type="button">Excluir</button
      >
    </div>
  </Form>
</Layout>

<script>
  import { creationalGuestSchema } from "../../schemas/schemas";
  import { getFormData } from "../../utils/getFormData";
  const form = document.getElementById("update-guest-form") as HTMLFormElement;

  form.addEventListener("submit", async (event) => {
    event.preventDefault();

    const data = getFormData(form);

    const parse = await creationalGuestSchema.safeParseAsync(data);

    if (!parse.success) {
      console.log(parse.error.errors);
    }

    if (parse.success) {
      const response = await fetch(
        `http://127.0.0.1:8000/hospedes/${parse.data.document}`,
        {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(parse.data),
        }
      );

      if (response.status === 200) {
        window.location.href = "/hospedes";
      }
    }
  });

  const deleteButton = document.getElementById(
    "delete_button"
  ) as HTMLButtonElement;

  deleteButton.addEventListener("click", async () => {
    const element = form.elements.namedItem("document") as HTMLInputElement;
    const guestDocument = element.value;

    const response = await fetch(
      `http://127.0.0.1:8000/hospedes/${guestDocument}`,
      { method: "DELETE" }
    );

    if (response.status === 204) {
      window.location.href = "/hospedes";
    }
  });
</script>
