---
import ErrorAlert from "../../components/ErrorAlert.astro";
import Form from "../../components/Form.astro";
import SelectInput from "../../components/SelectInput.astro";
import TextInput from "../../components/TextInput.astro";
import Layout from "../../layouts/Layout.astro";
const response = await fetch(
  "https://servicodados.ibge.gov.br/api/v1/paises/{paises}"
);
const data = await response.json();
const countries = [
  ...new Set(data.map((country: any) => country.nome.abreviado)),
] as string[];
---

<Layout>
  <Form id="new-guest-form">
    <div slot="inputs" class="flex flex-col">
      <div class="flex w-full">
        <SelectInput id="document_type" label="Tipo" options={["CPF"]} />
        <TextInput id="document" label="Documento" />
      </div>
      <div class="flex">
        <TextInput id="name" label="Nome" />
        <TextInput id="surname" label="Sobrenome" />
      </div>
      <div class="flex">
        <SelectInput id="country" label="País" options={countries} />
        <TextInput id="phone" label="Telefone" />
      </div>
    </div>
    <div slot="buttons" class="flex flex-col w-full items-center p-16">
      <button
        id="submit_button"
        class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-56"
        type="submit">Cadastrar</button
      >
    </div>
  </Form>

  <ErrorAlert
    id="conflict-alert"
    content="Já existe um hóspede cadastrado com esse documento"
  />
  <ErrorAlert
    id="bad-request-alert"
    content="Formulário envido inválido, verifique se todos os campos estão corretos"
  />
</Layout>

<script>
  const form = document.getElementById("new-guest-form") as HTMLFormElement;

  form.addEventListener("submit", async (event) => {
    event.preventDefault();
    const data: any = {};
    for (const el of form.elements) {
      if (el instanceof HTMLSelectElement || el instanceof HTMLInputElement) {
        if (el.id == "document") {
          data[el.id] = el.value.replaceAll(".", "").replaceAll("-", "");
        } else {
          data[el.id] = el.value.toLowerCase();
        }
      }
    }

    const response = await fetch(
      "http://127.0.0.1:5000/api/hospedes/cadastro",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      }
    );

    if (response.status === 400) {
      const json = await response.json();
      const errAlert = document.getElementById(
        "bad-request-alert"
      ) as HTMLDialogElement;
      errAlert.showModal();
    }

    if (response.status === 409) {
      const errAlert = document.getElementById(
        "conflict-alert"
      ) as HTMLDialogElement;
      errAlert.showModal();
    }

    if (response.status === 201) {
      window.location.href = "/hospedes";
    }
  });
</script>
